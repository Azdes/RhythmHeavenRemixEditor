package chrislo27.rhre.registry

import org.luaj.vm2.LuaValue
import org.luaj.vm2.lib.jse.CoerceJavaToLua

class Pattern(val id: String, val gameID: String, val name: String, val isStretchable: Boolean = false,
              val cues: List<PatternCue>,
              val autoGenerated: Boolean = false, val deprecated: List<String> = mutableListOf()) {

    val newlinedName: String = name.replace(" - ", "\n")

    val luaValue: LuaValue by lazy {
        val l = LuaValue.tableOf()

        l.set("id", id)
        l.set("gameID", gameID)
        l.set("name", name)
        l.set("deprecated", LuaValue.listOf(deprecated.map { CoerceJavaToLua.coerce(it) }.toTypedArray()))
        l.set("canAlterDuration", CoerceJavaToLua.coerce(isStretchable))
        l.set("patternCues", LuaValue.listOf(cues.map { it.luaValue }.toTypedArray()))
        l.set("autoGenerated", LuaValue.valueOf(autoGenerated))

        return@lazy l
    }

    data class PatternCue(val id: String, val gameID: String, val beat: Float, val track: Int, val duration: Float,
                          val semitone: Int) {

        val isSkillStar: Boolean by lazy {
            id == "extraSFX/star"
        }
        val luaValue: LuaValue by lazy {
            val l = LuaValue.tableOf()

            l.set("id", id)
            l.set("gameID", gameID)
            l.set("beat", beat.toDouble())
            l.set("track", track + 1)
            l.set("duration", duration.toDouble())
            l.set("semitone", semitone)

            return@lazy l
        }

    }

}
